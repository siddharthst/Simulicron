#!/usr/bin/env python

import glob
from collections import defaultdict
import os, sys

'''
This script computes the number of small RNA reads that are specific for species 
(that do not map on TEs in d.mel all copies).
It take a while to run
It takes as an imput a file .CrossRegulated.txt generated by a R script AllspeciesHeatMapExtra.R
It outputs a file '.SpeReads.txt' to be use with R script SpecificReadBarplot.R
'''

def GetBestCopyRead(Speciesfile,dictCrossSpecies):
    readsfiltDict=defaultdict(list)
    print(Speciesfile)
    Species=os.path.basename(Speciesfile).split('.readcount.txt')[0]

    # Get the name of the best copy for the concerned TEs
    readcount=open(Speciesfile).readlines()
    bestcopyList=[line.split('\t')[0]+'::'+line.split('\t')[1] for line in readcount if line.split('\t')[0] in dictCrossSpecies ]

    # Open the sam.bed with all read mapping
    reads=open(Speciesfile.replace('.readcount.txt',".sam.bed")).readlines()
    
    # Make a list of the reads to keep
    reads=[read for read in reads if read.split('\t')[0] in bestcopyList]
    for read in reads:
        readsfiltDict[read.split('::')[0]].append(read.split('\t')[3])
    return(readsfiltDict)




###########################################################
print(sys.argv[1])

mismatch=os.path.basename(sys.argv[1]).split('.')[-3]
sra=os.path.basename(sys.argv[1]).split('.')[-4]
print(sra,mismatch)

# readsfiltDict[(Species,TE)]=list(reads)
dictCross=defaultdict(list) # dictCross[Species]=list(TE)

# open the file with the pairs species-TE (noref)
CrossReg=open(sys.argv[1]).readlines()[1:]
print(CrossReg[0])
# Fill the dict[Species]=[TE]
for line in CrossReg:
    line=line.rstrip().split('\t')
    dictCross[line[0]].append(line[1])
    
    
# for dmel
#TODO : prepare a file with collapsed read and a file with decollapsed read (doneby Dmel4all species)
dictDmel={}
dictDmelD={}
# Save the unique list of TEs that are crossregulated (>0.7 % of the reads)
listTE=list(set([line.split('\t')[1] for line in CrossReg]))
Dmel= "AllSpecies/D.melanogaster/Dmel.Ref.gff.TE."+sra+'.'+mismatch+".sam.bed"
reads=open(Dmel).readlines()
#Just for the concerned TE, list the collapsed reads
for TE in listTE:
    dictDmel[TE]=list(set([read.split('\t')[3] for read in reads if read.split('::')[0] == TE]))
    dictDmelD[TE]=sum(map(int,[x.split('_x')[1] for x in dictDmel[TE]]))
    print("D.mel",TE,dictDmelD[TE])


readlist='Species\tTE\t'
readlist+='NbTotC\tNbSpeC\tNbTotD\tNbSpeD\tNbDmelD\n'
# Get the read for each species one by one
for Species in dictCross.keys():
    print(Species)
    Speciesfile= "AllSpecies/Bowtie."+sra+'.'+mismatch+'/'+Species+".readcount.txt"
    dicfilt=GetBestCopyRead(Speciesfile,dictCross[Species])
    for TE in dicfilt:
        print(Species,TE)
        # Get number of collapsed reads
        NbTotC=str(len(dicfilt[TE]))
        # Get  spe collapsed reads
        SpeC = [x for x in dicfilt[TE] if x not in dictDmel[TE]]
        NbSpeC=str(len(SpeC))
        # Get number of decollapsed reads  (tot and spe)
        NbTotD=str(sum(map(int,[x.split('_x')[1] for x in dicfilt[TE]])))
        NbSpeD=str(sum(map(int,[x.split('_x')[1] for x in SpeC])))
        NbTotDmelD=str(dictDmelD[TE])
        print(NbTotC,NbSpeC,NbTotD,NbSpeD,NbTotDmelD)
        readlist+=Species+'\t'+TE+'\t'+NbTotC+'\t'+NbSpeC+'\t'+NbTotD+'\t'+NbSpeD+'\t'+NbTotDmelD+'\n'
     
with open('AllSpecies/Stats/AllSpecies.'+sra+'.'+mismatch+'.SpeReads.txt','w') as readfile:
    readfile.write(readlist)
        
   
# python3 Scripts/GetSpecificReads.py AllSpecies/Results/Species.TE.$sra.$mismatch.CrossRegulated.txt AllSpecies/Bowtie.$sra.$mismatch/
# python3 Scripts/GetSpecificReads.py AllSpecies/Table/Species.TE.SRR11846563.0.CrossRegulated.txt
# python3 Scripts/GetSpecificReads.py AllSpecies/Results/Species.TE.SRR11846566.3.CrossRegulated.txt  